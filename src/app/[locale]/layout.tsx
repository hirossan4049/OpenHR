import "~/styles/globals.css";

import { type Metadata } from "next";
import { SessionProvider } from "next-auth/react";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { Geist } from "next/font/google";

import { Header } from "~/components/layout/header";
import { TRPCReactProvider } from "~/trpc/react";

export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

// Added: supported locales & fallback
const SUPPORTED_LOCALES = ["en", "ja"] as const;
const DEFAULT_LOCALE = "en";

type Props = Readonly<{ children: React.ReactNode; params: Promise<{ locale: string }> }>;

export default async function RootLayout({ children, params }: Props) {
  const { locale: rawLocale } = await params;
  const locale = (SUPPORTED_LOCALES as readonly string[]).includes(rawLocale)
    ? rawLocale
    : DEFAULT_LOCALE;

  const messages = await getMessages({ locale });

  return (
    <html lang={locale} className={`${geist.variable}`}>
      <body>
        <NextIntlClientProvider messages={messages} locale={locale} timeZone="UTC">
          <SessionProvider>
            <TRPCReactProvider>
              <Header />
              {children}
            </TRPCReactProvider>
          </SessionProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}